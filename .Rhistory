model_glm <- glm(Attrition~., data=trainData, family="binomial")
pre_glm <-ifelse(pre_glm>0.5,1,0)
table(pre_glm,testData$Attrition)
consfusionmatrix(testData$Attrition, pre_glm)
model_glm <- glm(Attrition~., data=trainData, family="binomial")
pre_glm <-ifelse(pre_glm>0.5,1,0)
table(pre_glm,testData$Attrition)
confusionmatrix(testData$Attrition, pre_glm)
model_glm <- glm(Attrition~., data=trainData, family="binomial")
pre_glm <-ifelse(pre_glm>0.5,1,0)
table(pre_glm,testData$Attrition)
confusionMatrix(testData$Attrition, pre_glm)
model_glm <- glm(Attrition~., data=trainData, family="binomial")
pre_glm <- predict(model_glm,testData, type = "response")
pre_glm <-ifelse(pre_glm>0.5,1,0)
table(pre_glm,testData$Attrition)
confusionMatrix(testData$Attrition, pre_glm)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~. , method = "glm", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
Predictions_glm <- predict(fit_glm, testData)
set.seed(1337)
Predictions_glm <- predict(fit_glm, testData)
confusionMatrix(prediction_glm,testData$Attrition)
str(testData)
hr_dataclean$Department <- as.factor(hr_dataclean$Department)
hr_dataclean$Education <- as.factor(hr_dataclean$Education)
hr_dataclean$Attrition <- as.factor(hr_dataclean$Attrition)
hr_dataclean$MaritalStatus <- as.factor(hr_dataclean$MaritalStatus)
hr_dataclean$BusinessTravel <- as.factor(hr_dataclean$BusinessTravel)
hr_dataclean$JobRole <- as.factor(hr_dataclean$JobRole)
hr_dataclean$educationfield <- as.factor(hr_dataclean$educationfield)
hr_dataclean$jobsatisfaction <- as.factor(hr_dataclean$jobsatisfaction)
hr_dataclean$jobinvolvement <- as.factor(hr_dataclean$jobinvolvement)
hr_dataclean$relationshipsatisfaction <- as.factor(hr_dataclean$relationshipsatisfaction)
hr_dataclean$worklifebalance <- as.factor(hr_dataclean$worklifebalance)
hr_dataclean$environmentsatisfaction <- as.factor(hr_dataclean$environmentsatisfaction)
hr_dataclean$overtime <- as.factor(hr_dataclean$overtime)
hr_dataclean$performancerating <- as.factor(hr_dataclean$performancerating)
hr_dataclean$jobclass <- as.factor(hr_dataclean$jobclass)
hr_dataclean$Gender <- as.factor(hr_dataclean$Gender)
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
trainData <- hr_dataclean[trainIndex,]
testData  <- hr_dataclean[-trainIndex,]
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~. , method = "glm", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
Predictions_glm <- predict(fit_glm, testData)
confusionMatrix(prediction_glm,testData$Attrition)
str(testData)
set.seed(1337)
Predictions_glm <- predict(fit_glm, testData)
confusionMatrix(Predictions_glm,testData$Attrition)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating, method = "glm", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup, method = "glm", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "glm", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + totalRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm1 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm1)
set.seed(1337)
trainControl <- trainControl(method = "cv", repeats = 10)
fit_glm <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + totalworkingyears + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm)
set.seed(1337)
fit_glm1 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
set.seed(1337)
fit_glm1 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm1)
set.seed(1337)
fit_glm1 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
set.seed(1337)
fit_glm1 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
set.seed(1337)
fit_glm1 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm1)
#remove years with current manager
set.seed(1337)
fit_glm3 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + MonthlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion + Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm3)
#remove years with current manager
set.seed(1337)
fit_glm3 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm3)
#remove years with current manager
set.seed(1337)
fit_glm3 <- train(Attrition ~ Department + Gender + Age + Education + MaritalStatus + BusinessTravel +JobRole + DistancefromHome + MonthlyIncome + DailyRate + HourlyRate + Numcompworked + Yearsatcompany + Yearssincelastpromotion +Yearswithcurrmanager +Yearsincurrentrole + trainingtimeslastyear + stockoptionlevel + salaryhike + educationfield + jobsatisfaction + jobinvolvement + relationshipsatisfaction +worklifebalance +environmentsatisfaction + overtime + performancerating + AgeGroup + jobclass, method = "rf", data = hr_dataclean, trControl = trainCtrl)
confusionMatrix(fit_glm3)
install.packages("Boruta")
a <- ggpie(worklifebalance,"Counts",fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
install.packages("ggplot2")
library(ggplot2)
a <- ggpie(worklifebalance,"Counts",fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
a <- ggpie(worklifebalance,"Counts",fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
install.packages("ggpubr")
library(ggplot2)
library(ggpubr)
a <- ggpie(worklifebalance,"Counts",fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
library(ggplot2)
library(ggpubr)
hr_data %>%
a <- ggpie(worklifebalance,"Counts",fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
library(ggplot2)
library(ggpubr)
hr_data %>%
a <- ggpie(worklifebalance,fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
library(ggplot2)
library(ggpubr)
a <- ggpie(Department,fill=AgeGroup,color="white", label="Counts",lab.pos = "out",lab.font = "white")
install.packages("randomForest")
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=1000)
varImpPlot(Raw.rf.model)
set.seed(1337)
library(randomForest)
indexes = sample(1:nrow(hr_dataclean), size=0.8*nrow(hr_dataclean))
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=1000)
varImpPlot(Raw.rf.model)
#Income level
hr_data$Incomelevel <- as.factor(ifelse (hr_data$MonthlyIncome < ave(hr_data$MonthlyIncome), "Low", "High"))
table(hr_data$IncomeLevel)
#Income level
hr_data$Incomelevel <- as.factor(ifelse (hr_data$MonthlyIncome < ave(hr_data$MonthlyIncome), "Low", "High"))
#Income level
hr_data$Incomelevel <- as.factor(ifelse (hr_data$MonthlyIncome < ave(hr_data$MonthlyIncome), "Low", "High"))
hr_data$Incomelevel
#Income level
hr_data$Incomelevel <- as.factor(ifelse (hr_data$MonthlyIncome < ave(hr_data$MonthlyIncome), "Low", "High"))
table(hr_data$Incomelevel, hr_data$Attrition)
hr_data$OverallSatisfaction <-
as.numeric(hr_data$environmentsatisfaction)+
as.numeric(hr_data$jobinvolvement)+
as.numeric(hr_data$jobsatisfaction)+
as.numeric(hr_data$relationshipsatisfaction)+
as.numeric(hr_data$worklifebalance)
hr_data$es <- as.numeric(hr_data$environmentsatisfaction)
hr_data$es <- as.numeric(hr_data$environmentsatisfaction)
str(hr_data$es)
library(tidyverse)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Low"] <- 1
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Medium"] <- 2
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="High"] <- 3
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Very High"] <- 4
str(hr_data$jobsatisfaction)
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Low"] <- 1
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Medium"] <- 2
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="High"] <- 3
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Very High"] <- 4
str(hr_data$relationshipsatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$OverallSatisfaction <- as.numeric(hr_data$environmentsatisfaction) + as.numeric(hr_data$jobsatisfaction)
str(hr_data$OverallSatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Low"] <- 1
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Medium"] <- 2
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="High"] <- 3
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Very High"] <- 4
str(hr_data$jobsatisfaction)
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Low"] <- 1
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Medium"] <- 2
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="High"] <- 3
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Very High"] <- 4
str(hr_data$relationshipsatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$OverallSatisfaction <- (hr_data$environmentsatisfaction) + (hr_data$jobsatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Low"] <- 1
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Medium"] <- 2
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="High"] <- 3
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Very High"] <- 4
str(hr_data$jobsatisfaction)
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Low"] <- 1
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Medium"] <- 2
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="High"] <- 3
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Very High"] <- 4
str(hr_data$relationshipsatisfaction)
hr_data$jobinvolvement[hr_data$jobinvolvement=="Low"] <- 1
hr_data$jobinvolvement[hr_data$jobinvolvement=="Medium"] <- 2
hr_data$jobinvolvement[hr_data$jobinvolvement=="High"] <- 3
hr_data$jobinvolvement[hr_data$jobinvolvement=="Very High"] <- 4
str(hr_data$jobinvolvement)
hr_data$worklifebalance[hr_data$worklifebalance=="Bad"] <- 1
hr_data$worklifebalance[hr_data$worklifebalance=="Good"] <- 2
hr_data$worklifebalance[hr_data$worklifebalance=="Better"] <- 3
hr_data$worklifebalance[hr_data$worklifebalance=="Best"] <- 4
hr_data$OverallSatisfaction <- as.numeric(hr_data$environmentsatisfaction) + as.numeric(hr_data$jobsatisfaction) + as.numeric(hr_data$relationshipsatisfaction) + as.numeric(hr_data$jobinvolvement)
str(hr_data$OverallSatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Low"] <- 1
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Medium"] <- 2
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="High"] <- 3
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Very High"] <- 4
str(hr_data$jobsatisfaction)
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Low"] <- 1
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Medium"] <- 2
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="High"] <- 3
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Very High"] <- 4
str(hr_data$relationshipsatisfaction)
hr_data$jobinvolvement[hr_data$jobinvolvement=="Low"] <- 1
hr_data$jobinvolvement[hr_data$jobinvolvement=="Medium"] <- 2
hr_data$jobinvolvement[hr_data$jobinvolvement=="High"] <- 3
hr_data$jobinvolvement[hr_data$jobinvolvement=="Very High"] <- 4
str(hr_data$jobinvolvement)
hr_data$worklifebalance[hr_data$worklifebalance=="Bad"] <- 1
hr_data$worklifebalance[hr_data$worklifebalance=="Good"] <- 2
hr_data$worklifebalance[hr_data$worklifebalance=="Better"] <- 3
hr_data$worklifebalance[hr_data$worklifebalance=="Best"] <- 4
str(hr_data$worklifebalance)
hr_data$OverallSatisfaction <- as.numeric(hr_data$environmentsatisfaction) + as.numeric(hr_data$jobsatisfaction) + as.numeric(hr_data$relationshipsatisfaction) + as.numeric(hr_data$jobinvolvement)
str(hr_data$OverallSatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Low"] <- 1
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Medium"] <- 2
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="High"] <- 3
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Very High"] <- 4
str(hr_data$jobsatisfaction)
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Low"] <- 1
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Medium"] <- 2
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="High"] <- 3
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Very High"] <- 4
str(hr_data$relationshipsatisfaction)
hr_data$jobinvolvement[hr_data$jobinvolvement=="Low"] <- 1
hr_data$jobinvolvement[hr_data$jobinvolvement=="Medium"] <- 2
hr_data$jobinvolvement[hr_data$jobinvolvement=="High"] <- 3
hr_data$jobinvolvement[hr_data$jobinvolvement=="Very High"] <- 4
str(hr_data$jobinvolvement)
hr_data$worklifebalance[hr_data$worklifebalance=="Bad"] <- 1
hr_data$worklifebalance[hr_data$worklifebalance=="Good"] <- 2
hr_data$worklifebalance[hr_data$worklifebalance=="Better"] <- 3
hr_data$worklifebalance[hr_data$worklifebalance=="Best"] <- 4
str(hr_data$worklifebalance)
hr_data$OverallSatisfaction <- as.numeric(hr_data$environmentsatisfaction) + as.numeric(hr_data$jobsatisfaction) + as.numeric(hr_data$relationshipsatisfaction) + as.numeric(hr_data$jobinvolvement)
str(hr_data$OverallSatisfaction)
summary(hr_data$OverallSatisfaction)
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Low"] <- 1
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Medium"] <- 2
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="High"] <- 3
hr_data$environmentsatisfaction[hr_data$environmentsatisfaction=="Very High"] <- 4
str(hr_data$environmentsatisfaction)
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Low"] <- 1
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Medium"] <- 2
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="High"] <- 3
hr_data$jobsatisfaction[hr_data$jobsatisfaction=="Very High"] <- 4
str(hr_data$jobsatisfaction)
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Low"] <- 1
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Medium"] <- 2
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="High"] <- 3
hr_data$relationshipsatisfaction[hr_data$relationshipsatisfaction=="Very High"] <- 4
str(hr_data$relationshipsatisfaction)
hr_data$jobinvolvement[hr_data$jobinvolvement=="Low"] <- 1
hr_data$jobinvolvement[hr_data$jobinvolvement=="Medium"] <- 2
hr_data$jobinvolvement[hr_data$jobinvolvement=="High"] <- 3
hr_data$jobinvolvement[hr_data$jobinvolvement=="Very High"] <- 4
str(hr_data$jobinvolvement)
hr_data$worklifebalance[hr_data$worklifebalance=="Bad"] <- 1
hr_data$worklifebalance[hr_data$worklifebalance=="Good"] <- 2
hr_data$worklifebalance[hr_data$worklifebalance=="Better"] <- 3
hr_data$worklifebalance[hr_data$worklifebalance=="Best"] <- 4
str(hr_data$worklifebalance)
hr_data$OverallSatisfaction <- as.numeric(hr_data$environmentsatisfaction) + as.numeric(hr_data$jobsatisfaction) + as.numeric(hr_data$relationshipsatisfaction) + as.numeric(hr_data$jobinvolvement)
str(hr_data$OverallSatisfaction)
summary(hr_data$OverallSatisfaction)
hr_data$OverallSatisfactionlevel <- as.factor(ifelse (hr_data$OverallSatisfaction < ave(hr_data$OverallSatisfaction), "Low", "High"))
table(hr_data$OverallSatisfactionlevel,hr_data$Attrition)
#Income level
hr_data$Incomelevel <- as.factor(ifelse (hr_data$MonthlyIncome < ave(hr_data$MonthlyIncome), "Low", "High"))
table(hr_data$Incomelevel, hr_data$Attrition)
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
hr_dataclean <- hr_data
hr_dataclean = hr_dataclean[,!(names(hr_dataclean) %in% c('Marital Status','Job Role','Attrition (Yes/No)','Marital Status','Education Field','Business Travel','Job Involvement','Job Satisfaction','Job Level','Hourly Rate (USD)','Daily Rate (USD)','Monthly Rate (USD)','Monthly Income (USD)','Salary Hike (%)','Stock Option Level','Over Time','No. of Companies Worked','Total Working Years','Years At Company','Years In Current Role','Years Since Last Promotion','Years With Curr Manager','Environment Satisfaction','Training Times Last Year','Work Life Balance','Performance Rating','Relationship Satisfaction','Distance From Home (kms)'))]
str(hr_dataclean)
hr_dataclean$Department <- as.factor(hr_dataclean$Department)
hr_dataclean$Education <- as.factor(hr_dataclean$Education)
hr_dataclean$Attrition <- as.factor(hr_dataclean$Attrition)
hr_dataclean$MaritalStatus <- as.factor(hr_dataclean$MaritalStatus)
hr_dataclean$BusinessTravel <- as.factor(hr_dataclean$BusinessTravel)
hr_dataclean$JobRole <- as.factor(hr_dataclean$JobRole)
hr_dataclean$educationfield <- as.factor(hr_dataclean$educationfield)
hr_dataclean$jobsatisfaction <- as.factor(hr_dataclean$jobsatisfaction)
hr_dataclean$jobinvolvement <- as.factor(hr_dataclean$jobinvolvement)
hr_dataclean$relationshipsatisfaction <- as.factor(hr_dataclean$relationshipsatisfaction)
hr_dataclean$worklifebalance <- as.factor(hr_dataclean$worklifebalance)
hr_dataclean$environmentsatisfaction <- as.factor(hr_dataclean$environmentsatisfaction)
hr_dataclean$overtime <- as.factor(hr_dataclean$overtime)
hr_dataclean$performancerating <- as.factor(hr_dataclean$performancerating)
hr_dataclean$jobclass <- as.factor(hr_dataclean$jobclass)
hr_dataclean$Gender <- as.factor(hr_dataclean$Gender)
hr_dataclean$Department <- as.factor(hr_dataclean$Department)
hr_dataclean$Education <- as.factor(hr_dataclean$Education)
hr_dataclean$Attrition <- as.factor(hr_dataclean$Attrition)
hr_dataclean$MaritalStatus <- as.factor(hr_dataclean$MaritalStatus)
hr_dataclean$BusinessTravel <- as.factor(hr_dataclean$BusinessTravel)
hr_dataclean$JobRole <- as.factor(hr_dataclean$JobRole)
hr_dataclean$educationfield <- as.factor(hr_dataclean$educationfield)
hr_dataclean$jobsatisfaction <- as.factor(hr_dataclean$jobsatisfaction)
hr_dataclean$jobinvolvement <- as.factor(hr_dataclean$jobinvolvement)
hr_dataclean$relationshipsatisfaction <- as.factor(hr_dataclean$relationshipsatisfaction)
hr_dataclean$worklifebalance <- as.factor(hr_dataclean$worklifebalance)
hr_dataclean$environmentsatisfaction <- as.factor(hr_dataclean$environmentsatisfaction)
hr_dataclean$overtime <- as.factor(hr_dataclean$overtime)
hr_dataclean$performancerating <- as.factor(hr_dataclean$performancerating)
hr_dataclean$jobclass <- as.factor(hr_dataclean$jobclass)
hr_dataclean$Gender <- as.factor(hr_dataclean$Gender)
str(hr_dataclean)
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
library(tidyverse)
library(caret)
library(rpart)
library(knitr) #Dynamic Report Generator including use of LateX, HTML
library(gridExtra)
library(corrplot)
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
trainData <- hr_dataclean[trainIndex,]
testData  <- hr_dataclean[-trainIndex,]
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500,na.action = FALSE)
hr_dataclean <- hr_data
hr_dataclean = hr_dataclean[,!(names(hr_dataclean) %in% c('Marital Status','Job Role','Attrition (Yes/No)','Marital Status','Education Field','Business Travel','Job Involvement','Job Satisfaction','Job Level','Hourly Rate (USD)','Daily Rate (USD)','Monthly Rate (USD)','Monthly Income (USD)','Salary Hike (%)','Stock Option Level','Over Time','No. of Companies Worked','Total Working Years','Years At Company','Years In Current Role','Years Since Last Promotion','Years With Curr Manager','Environment Satisfaction','Training Times Last Year','Work Life Balance','Performance Rating','Relationship Satisfaction','Distance From Home (kms)', 'es'))]
str(hr_dataclean)
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
trainData <- hr_dataclean[trainIndex,]
testData  <- hr_dataclean[-trainIndex,]
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
hr_dataclean$Department <- as.factor(hr_dataclean$Department)
hr_dataclean$Education <- as.factor(hr_dataclean$Education)
hr_dataclean$Attrition <- as.factor(hr_dataclean$Attrition)
hr_dataclean$MaritalStatus <- as.factor(hr_dataclean$MaritalStatus)
hr_dataclean$BusinessTravel <- as.factor(hr_dataclean$BusinessTravel)
hr_dataclean$JobRole <- as.factor(hr_dataclean$JobRole)
hr_dataclean$educationfield <- as.factor(hr_dataclean$educationfield)
hr_dataclean$jobsatisfaction <- as.factor(hr_dataclean$jobsatisfaction)
hr_dataclean$jobinvolvement <- as.factor(hr_dataclean$jobinvolvement)
hr_dataclean$relationshipsatisfaction <- as.factor(hr_dataclean$relationshipsatisfaction)
hr_dataclean$worklifebalance <- as.factor(hr_dataclean$worklifebalance)
hr_dataclean$environmentsatisfaction <- as.factor(hr_dataclean$environmentsatisfaction)
hr_dataclean$overtime <- as.factor(hr_dataclean$overtime)
hr_dataclean$performancerating <- as.factor(hr_dataclean$performancerating)
hr_dataclean$jobclass <- as.factor(hr_dataclean$jobclass)
hr_dataclean$Gender <- as.factor(hr_dataclean$Gender)
str(hr_dataclean)
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
trainData <- hr_dataclean[trainIndex,]
testData  <- hr_dataclean[-trainIndex,]
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
install.packages("ggRandomForests")
set.seed(1337)
library(randomForests)
set.seed(1337)
library(ggRandomForests)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
set.seed(1337)
library(ggRandomForests)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
plot(gg_vimp(Raw.rf.model))
set.seed(1337)
library(ggRandomForests)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
rfscrc <- rfsrc(Attrition~., data= hr_dataclean)
hr_dataclean$Department <- as.factor(hr_dataclean$Department)
hr_dataclean$Education <- as.factor(hr_dataclean$Education)
hr_dataclean$Attrition <- as.factor(hr_dataclean$Attrition)
hr_dataclean$MaritalStatus <- as.factor(hr_dataclean$MaritalStatus)
hr_dataclean$BusinessTravel <- as.factor(hr_dataclean$BusinessTravel)
hr_dataclean$JobRole <- as.factor(hr_dataclean$JobRole)
hr_dataclean$educationfield <- as.factor(hr_dataclean$educationfield)
hr_dataclean$jobsatisfaction <- as.factor(hr_dataclean$jobsatisfaction)
hr_dataclean$jobinvolvement <- as.factor(hr_dataclean$jobinvolvement)
hr_dataclean$relationshipsatisfaction <- as.factor(hr_dataclean$relationshipsatisfaction)
hr_dataclean$worklifebalance <- as.factor(hr_dataclean$worklifebalance)
hr_dataclean$environmentsatisfaction <- as.factor(hr_dataclean$environmentsatisfaction)
hr_dataclean$overtime <- as.factor(hr_dataclean$overtime)
hr_dataclean$performancerating <- as.factor(hr_dataclean$performancerating)
hr_dataclean$jobclass <- as.factor(hr_dataclean$jobclass)
hr_dataclean$Gender <- as.factor(hr_dataclean$Gender)
str(hr_dataclean)
set.seed(1337)
library(ggRandomForests)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
rfscrc <- rfsrc(Attrition ~., data= hr_dataclean)
set.seed(1337)
library(ggRandomForests)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
rfscrc <- rfsrc(Attrition ~., data= trainData)
set.seed(1337)
library(ggRandomForests)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
rfscrc <- rfsrc(Attrition ~.,  trainData)
set.seed(1337)
library(randomForest)
Raw.rf.model <- randomForest(Attrition~.,trainData, importance=TRUE,ntree=500)
varImpPlot(Raw.rf.model)
library(ggRandomForests)
rfscrc <- rfsrc(Attrition ~.,  trainData)
library(ggRandomForests)
rfscrc <- rfsrc(Attrition ~ .,  trainData)
str(trainData$Attrition)
library(ggRandomForests)
rfscrc <- rfsrc(Attrition ~ .,  trainData)
str(trainData$Attrition)
library(ggRandomForests)
rfscrc_data <- rfsrc(Attrition ~ .,trainData)
str(trainData$Attrition)
library(ggRandomForests)
rfscrc_data <- rfsrc(Attrition ~ .,trainData)
str(trainData)
library(ggRandomForests)
rfscrc_data <- rfsrc(Attrition ~ .,trainData)
trainData <- as.data.frame(trainData)
str(trainData)
library(ggRandomForests)
rfscrc_data <- rfsrc(Attrition ~ .,trainData)
plot(gg_vimp(rfscrc_data))
#Divide the data into training and test dataset.
trainIndex <- createDataPartition(hr_dataclean$Attrition, p = 0.7, list = FALSE)
trainData <- hr_dataclean[trainIndex,]
testData  <- hr_dataclean[-trainIndex,]
trainData <- as.data.frame(trainData)
str(trainData)
